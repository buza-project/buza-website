

# Base Python image
FROM python:3.6-alpine AS base-python
ENV COMMAND_APK_ADD='apk add --no-cache'
# Python: Don't write .pyc files on import
ENV PYTHONDONTWRITEBYTECODE=1


# Base image for building Python wheels
FROM base-python AS base-python-build-wheel
ENV COMMAND_PIP_WHEEL='pip --no-cache-dir wheel --wheel-dir=/wheels'


# Base image for building Python C extensions
FROM base-python-build-wheel AS base-python-build-c
RUN ${COMMAND_APK_ADD:?} build-base


# Stage: Build Pillow wheel for Alpine
FROM base-python-build-c AS build-pillow
RUN ${COMMAND_APK_ADD:?} \
    # Pillow dependencies:
    # https://github.com/python-pillow/Pillow/blob/master/depends/alpine_Dockerfile
    # https://github.com/python-pillow/docker-images/blob/master/alpine/Dockerfile
    jpeg-dev \
    zlib-dev \
    freetype-dev \
    lcms2-dev \
    openjpeg-dev \
    tiff-dev \
    tk-dev \
    tcl-dev
RUN ${COMMAND_PIP_WHEEL:?} --no-deps Pillow
# Output dir: /wheels/


# Stage: Build Buza's requirements-pipenv.txt as wheels
FROM base-python-build-wheel AS build-buza-requirements
# XXX: Copy in Pillow
COPY --from=build-pillow /wheels/ /wheels/
COPY requirements-pipenv.txt /
RUN ${COMMAND_PIP_WHEEL:?} \
    # Find existing wheels.
    --find-links /wheels \
    --no-deps \
    -r requirements-pipenv.txt
# Output dir: /wheels/


# Stage: Build Buza wheel
FROM base-python-build-wheel AS build-buza-wheel
# setuptools-scm needs git
RUN ${COMMAND_APK_ADD:?} git
COPY .git/ /buza-website/.git/
COPY src/ /buza-website/src/
COPY README.rst setup.cfg setup.py /buza-website/
RUN ${COMMAND_PIP_WHEEL:?} --no-deps /buza-website
# Output dir: /wheels/


# Stage: Build Buza's Yarn packages
FROM node:alpine AS build-buza-yarn
COPY .yarnclean package.json /
RUN yarn
# Output dir: /node_modules/


# Stage: Build psycopg2 wheel for Alpine
FROM base-python-build-c AS build-psycopg2
RUN ${COMMAND_APK_ADD:?} postgresql-dev
RUN ${COMMAND_PIP_WHEEL:?} psycopg2
# Output dir: /wheels/


# Stage: Build Buza site and files
FROM base-python-build-wheel AS build-buza-site
COPY --from=build-buza-requirements /wheels/ /wheels/
COPY --from=build-buza-wheel /wheels/ /wheels/
# XXX deployment:
COPY --from=build-psycopg2 /wheels/ /wheels/
RUN pip install --no-cache \
    --no-index \
    --user \
    --no-deps \
    /wheels/*
# Just set enough to build the static files.
COPY --from=build-buza-yarn /node_modules/ /node_modules/
ENV PATH="/root/.local/bin:${PATH}"
ENV DJANGO_SETTINGS_MODULE=buza.settings_env
ENV BASE_DIR=/
ENV DJANGO_SECRET_KEY=dummy-secret-key
RUN django-admin collectstatic
# XXX: Just copy these, for now.
RUN cp -a /node_modules/* /static_root/
# Output dir: /root/.local/
# Output dir: /static_root/


# Stage: Final Django image.
FROM base-python AS buza-django
# Library dependencies:
RUN ${COMMAND_APK_ADD:?} \
    # psycopg2
    libpq \
    # Pillow:
    jpeg \
    zlib \
    freetype \
    lcms2 \
    openjpeg \
    tiff \
    tk \
    tcl
COPY --from=build-buza-site /root/.local /root/.local
ENV PATH="/root/.local/bin:$PATH"
ENV DJANGO_SETTINGS_MODULE=buza.settings_env
ENV BASE_DIR=/instance


# Stage: Final Django + Gunicorn image.
FROM buza-django AS buza-django-gunicorn
RUN pip install --no-cache --user gunicorn
# TODO: Better bind host?
CMD gunicorn --bind 0.0.0.0 'django.core.wsgi:get_wsgi_application()'


# Stage: Final nginx image.
FROM nginx:alpine AS buza-nginx
COPY --from=build-buza-site /static_root/ /static_root/
# Replace default.conf
COPY deploy/nginx.conf /etc/nginx/conf.d/default.conf
